openapi: 3.0.0
info:
  title: User Profile Management API
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: Users
    description: User profile management operations

paths:
  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      description: Returns a complete user profile with all information
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: User profile found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
              examples:
                complete-user:
                  summary: Complete user profile example
                  value:
                    identifier: "USER-001"
                    first_name: "Mamy"
                    last_name: "Be"
                    birthdate: "1994-10-22"
                    email: "mamy.be@example.com"
                    address_street: "123 Left R"
                    address_city: "Antananarivo"
                    address_country: "Madagascar"
                    address_postal_code: "101"
                    needs_newsletter: true
                    language: "eng"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                user-not-found:
                  summary: User not found error
                  value:
                    error: "User not found"

  /users:
    post:
      tags:
        - Users
      summary: Create users
      description: Create one or more users without providing identifiers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserProfileList'
            examples:
              create-users:
                summary: Example of users to create
                value:
                  - first_name: "Alice"
                    last_name: "Smith"
                    birthdate: "1992-08-20"
                    email: "alice.smith@example.com"
                    address_street: "456 Oak Labs"
                    address_city: "Antsirabe"
                    address_country: "Madagascar"
                    address_postal_code: "102"
                    needs_newsletter: false
                    language: "fr"
                  - first_name: "Bob"
                    last_name: "Mamyson"
                    birthdate: "1985-03-12"
                    email: "bob.mamyson@example.com"
                    address_street: "789 Pine St"
                    address_city: "Fianarantsoa"
                    address_country: "Madagascar"
                    address_postal_code: "301"
                    needs_newsletter: true
                    language: "mg"
      responses:
        '201':
          description: Users created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileList'
              examples:
                created-users:
                  summary: Example of created users with identifiers
                  value:
                    - identifier: "USER-002"
                      first_name: "Alice"
                      last_name: "Smith"
                      birthdate: "1992-08-20"
                      email: "alice.smith@example.com"
                      address_street: "456 Oak Labs"
                      address_city: "Antsirabe"
                      address_country: "Madagascar"
                      address_postal_code: "102"
                      needs_newsletter: false
                      language: "fr"
                    - identifier: "USER-003"
                      first_name: "Bob"
                      last_name: "Mamyson"
                      birthdate: "1985-03-12"
                      email: "bob.mamyson@example.com"
                      address_street: "789 Pine St"
                      address_city: "Fianarantsoa"
                      address_country: "Madagascar"
                      address_postal_code: "301"
                      needs_newsletter: true
                      language: "mg"

  /users/{id}/personalInfo:
    put:
      tags:
        - Users
      summary: Update personal information
      description: Update only the personal information of a user
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalInfo'
            examples:
              update-personal:
                summary: Example of personal info update
                value:
                  first_name: "Ratefy"
                  last_name: "Rakoto"
                  birthdate: "1988-12-03"
                  email: "ratefy.rakoto@example.com"
      responses:
        '200':
          description: Personal information updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}/address:
    put:
      tags:
        - Users
      summary: Update address
      description: Update only the addresss of a user
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
            examples:
              update-address:
                summary: Example of address update
                value:
                  address_street: "456 Rue Baar"
                  address_city: "Toamasina"
                  address_country: "Madagascar"
                  address_postal_code: "201"
      responses:
        '200':
          description: Address updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}/preferences:
    put:
      tags:
        - Users
      summary: Update preferences
      description: Update only the preferences of a user
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
            examples:
              update-preferences:
                summary: Example of preferences update
                value:
                  needs_newsletter: true
                  language: "mg"
      responses:
        '200':
          description: Preferences updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    UserId:
      name: id
      in: path
      required: true
      description: The user identifier
      schema:
        type: string
        pattern: '^[A-Za-z0-9-]+$'
      example: "USER-001"

  schemas:
    PersonalInfo:
      type: object
      properties:
        first_name:
          type: string
          description: User's first name
          example: "Mamy"
        last_name:
          type: string
          description: User's last name
          example: "Be"
        birthdate:
          type: string
          format: date
          description: User's birthdate in YYYY-MM-DD format
          example: "1994-10-22"
        email:
          type: string
          format: email
          description: User's email address
          example: "mamy.be@example.com"
      required:
        - first_name
        - last_name
        - birthdate
        - email

    Address:
      type: object
      properties:
        address_street:
          type: string
          description: Street address
          example: "123 Left R"
        address_city:
          type: string
          description: City
          example: "Antananarivo"
        address_country:
          type: string
          description: Country
          example: "Madagascar"
        address_postal_code:
          type: string
          pattern: '^\d+$'
          description: Postal code (numeric characters only)
          example: "101"
      required:
        - address_street
        - address_city
        - address_country
        - address_postal_code

    Preferences:
      type: object
      properties:
        needs_newsletter:
          type: boolean
          description: Whether the user wants to receive newsletters
          example: true
        language:
          type: string
          enum: ["mg", "fr", "eng"]
          description: User's preferred language
          example: "eng"
      required:
        - needs_newsletter
        - language

    CreateUserProfile:
      allOf:
        - $ref: '#/components/schemas/PersonalInfo'
        - $ref: '#/components/schemas/Address'
        - $ref: '#/components/schemas/Preferences'

    UserProfile:
      type: object
      properties:
        identifier:
          type: string
          description: Unique user identifier (generated by server)
          example: "USER-001"
        first_name:
          type: string
          example: "Mamy"
        last_name:
          type: string
          example: "Be"
        birthdate:
          type: string
          format: date
          example: "1994-10-22"
        email:
          type: string
          format: email
          example: "mamy.be@example.com"
        address_street:
          type: string
          example: "123 Left R"
        address_city:
          type: string
          example: "Antananarivo"
        address_country:
          type: string
          example: "Madagascar"
        address_postal_code:
          type: string
          pattern: '^\d+$'
          example: "101"
        needs_newsletter:
          type: boolean
          example: true
        language:
          type: string
          enum: ["mg", "fr", "eng"]
          example: "eng"
      required:
        - identifier
        - first_name
        - last_name
        - birthdate
        - email
        - address_street
        - address_city
        - address_country
        - address_postal_code
        - needs_newsletter
        - language

    CreateUserProfileList:
      type: array
      items:
        $ref: '#/components/schemas/CreateUserProfile'
      description: List of user profiles to create (without identifiers)

    UserProfileList:
      type: array
      items:
        $ref: '#/components/schemas/UserProfile'
      description: List of user profiles with identifiers

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
        - error